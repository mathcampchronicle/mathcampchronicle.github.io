{"version":3,"sources":["webpack://livingdocs-gatsby-magazine/./src/resources/ad-exclusive.gif","webpack://livingdocs-gatsby-magazine/./src/components/header/adExclusive.js","webpack://livingdocs-gatsby-magazine/./src/components/SEO/facebook.js","webpack://livingdocs-gatsby-magazine/./src/components/SEO/twitter.js","webpack://livingdocs-gatsby-magazine/./src/components/SEO/basic.js","webpack://livingdocs-gatsby-magazine/./src/templates/article.js"],"names":["className","href","target","rel","alt","src","ad","style","maxHeight","props","Helmet","property","content","url","title","description","name","data","publications","publication","metadata","html","extra","dangerouslySetInnerHTML","__html"],"mappings":"kNAAA,EAAe,IAA0B,2DCWzC,EARoB,kBAClB,uBAAKA,UAAU,eACb,qBAAGC,KAAK,4BAA4BC,OAAO,SAASC,IAAI,wBACtD,uBAAKC,IAAI,OAAOC,IAAKC,EAAIC,MAAO,CAACC,UAAW,a,UCWlD,EAdiB,SAAAC,GAAK,OACpB,gBAACC,EAAA,GAAD,KAEE,wBAAMC,SAAS,UAAUC,QAAQ,YACjC,wBAAMD,SAAS,SAASC,QAASH,EAAMI,MACvC,wBAAMF,SAAS,WAAWC,QAASH,EAAMK,QACzC,wBAAMH,SAAS,iBAAiBC,QAASH,EAAMM,cAC/C,wBACEJ,SAAS,WACTC,QAAQ,qECId,EAbgB,SAAAH,GAAK,OACnB,gBAACC,EAAA,GAAD,KACE,wBAAMC,SAAS,eAAeC,QAAQ,wBACtC,wBAAMD,SAAS,cAAcC,QAASH,EAAMI,MAC5C,wBAAMF,SAAS,gBAAgBC,QAASH,EAAMK,QAC9C,wBAAMH,SAAS,sBAAsBC,QAASH,EAAMM,cACpD,wBACEJ,SAAS,gBACTC,QAAQ,qECDd,EAPc,SAAAH,GAAK,OACjB,gBAACC,EAAA,GAAD,CAAQI,MAAOL,EAAMK,OACnB,wBAAME,KAAK,cAAcJ,QAASH,EAAMM,cACxC,wBAAMC,KAAK,WAAWJ,QAASH,EAAMK,U,UCmDzC,EAhDgB,SAAAL,GAEd,IAAMM,EAAcN,EAAMQ,KAAKC,aAAaC,YAAYC,SAASL,YAG3DD,EAAQL,EAAMQ,KAAKC,aAAaC,YAAYC,SAASN,MAGrDO,EAAOZ,EAAMQ,KAAKC,aAAaI,MAAMD,KAGrCR,EAAMO,QACZ,OACE,gBAAC,IAAD,KAEE,gBAAC,EAAD,CAAON,MAAOA,EAAOC,YAAaA,IAClC,gBAAC,EAAD,CAASD,MAAOA,EAAOC,YAAaA,EAAaF,IAAKA,IACtD,gBAAC,EAAD,CAAUC,MAAOA,EAAOC,YAAaA,EAAaF,IAAKA,IAEvD,gBAAC,EAAD,MACA,uBAAKU,wBAAyB,CAACC,OAAQH","file":"component---src-templates-article-js-2e2a5ed4675ca71c69af.js","sourcesContent":["export default __webpack_public_path__ + \"static/ad-exclusive-3306a3e2df5496f96f1c2a06dfd598b2.gif\";","import React from 'react'\nimport ad from '../../resources/ad-exclusive.gif'\n\nconst adExclusive = () => (\n  <div className=\"ad ad--head\">\n    <a href=\"https://www.livingdocs.io\" target=\"_blank\" rel=\" noopener noreferrer\">\n      <img alt=\"test\" src={ad} style={{maxHeight: '90px'}} />\n    </a>\n  </div>\n)\n\nexport default adExclusive\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst Facebook = props => (\n  <Helmet>\n    {/* Open Graph / Facebook */}\n    <meta property=\"og:type\" content=\"website\" />\n    <meta property=\"og:url\" content={props.url} />\n    <meta property=\"og:title\" content={props.title} />\n    <meta property=\"og:description\" content={props.description} />\n    <meta\n      property=\"og:image\"\n      content=\"http://livingdocs-assets.s3.amazonaws.com/ld_logo_final@2x.png\"\n    />\n  </Helmet>\n)\n\nexport default Facebook\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst Twitter = props => (\n  <Helmet>\n    <meta property=\"twitter:card\" content=\"summary_large_image\" />\n    <meta property=\"twitter:url\" content={props.url} />\n    <meta property=\"twitter:title\" content={props.title} />\n    <meta property=\"twitter:description\" content={props.description} />\n    <meta\n      property=\"twitter:image\"\n      content=\"http://livingdocs-assets.s3.amazonaws.com/ld_logo_final@2x.png\"\n    />\n  </Helmet>\n)\n\nexport default Twitter\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst Basic = props => (\n  <Helmet title={props.title}>\n    <meta name=\"description\" content={props.description} />\n    <meta name=\"keywords\" content={props.title} />\n  </Helmet>\n)\n\nexport default Basic\n","import React from 'react'\nimport {graphql} from 'gatsby'\nimport Layout from '../components/layout'\nimport AdExclusive from '../components/header/adExclusive'\nimport {Twitter, Facebook, Basic} from '../components/SEO'\nimport {metadata} from '../../config'\n\n// The pages created in gatsby-node.js will use this component(\"template\" by gatsby convention)\n// The data is recieved by the graphQL query from the bottom of this component\nconst article = props => {\n  // SEO - description (Page, twitter, facebook)\n  const description = props.data.publications.publication.metadata.description\n\n  // SEO - title (Page, twitter, facebook)\n  const title = props.data.publications.publication.metadata.title\n\n  // HTML - rendering the html-body\n  const html = props.data.publications.extra.html\n\n  // SEO - url (Page, twitter, facebook)\n  const url = metadata.url\n  return (\n    <Layout>\n      {/* SEO start, information for the html <head></head> */}\n      <Basic title={title} description={description} />\n      <Twitter title={title} description={description} url={url} />\n      <Facebook title={title} description={description} url={url} />\n      {/* SEO end, information for the html <head></head> */}\n      <AdExclusive />\n      <div dangerouslySetInnerHTML={{__html: html}} />\n    </Layout>\n  )\n}\n\n// in gatsby-node.js we gave a context \"slug\"\n// we can use that to filter the matching publication and slug now\nexport const query = graphql`\n  query($slug: String!) {\n    publications(extra: {slug: {eq: $slug}}) {\n      publication {\n        metadata {\n          authors {\n            references {\n              id\n            }\n          }\n          title\n          description\n        }\n      }\n      extra {\n        html\n        slug\n      }\n    }\n  }\n`\nexport default article\n"],"sourceRoot":""}
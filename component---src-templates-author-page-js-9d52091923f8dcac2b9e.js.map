{"version":3,"sources":["webpack://livingdocs-gatsby-magazine/./src/components/SEO/facebook.js","webpack://livingdocs-gatsby-magazine/./src/components/SEO/twitter.js","webpack://livingdocs-gatsby-magazine/./src/components/SEO/basic.js","webpack://livingdocs-gatsby-magazine/./src/templates/authorPage.js"],"names":["props","Helmet","property","content","url","title","description","name","profile","data","publications","publication","metadata","biography","authorImage","originalUrl","className","role","alt","src","dangerouslySetInnerHTML","__html"],"mappings":"qPAiBA,EAdiB,SAAAA,GAAK,OACpB,gBAACC,EAAA,GAAD,KAEE,wBAAMC,SAAS,UAAUC,QAAQ,YACjC,wBAAMD,SAAS,SAASC,QAASH,EAAMI,MACvC,wBAAMF,SAAS,WAAWC,QAASH,EAAMK,QACzC,wBAAMH,SAAS,iBAAiBC,QAASH,EAAMM,cAC/C,wBACEJ,SAAS,WACTC,QAAQ,qECId,EAbgB,SAAAH,GAAK,OACnB,gBAACC,EAAA,GAAD,KACE,wBAAMC,SAAS,eAAeC,QAAQ,wBACtC,wBAAMD,SAAS,cAAcC,QAASH,EAAMI,MAC5C,wBAAMF,SAAS,gBAAgBC,QAASH,EAAMK,QAC9C,wBAAMH,SAAS,sBAAsBC,QAASH,EAAMM,cACpD,wBACEJ,SAAS,gBACTC,QAAQ,qECDd,EAPc,SAAAH,GAAK,OACjB,gBAACC,EAAA,GAAD,CAAQI,MAAOL,EAAMK,OACnB,wBAAME,KAAK,cAAcJ,QAASH,EAAMM,cACxC,wBAAMC,KAAK,WAAWJ,QAASH,EAAMK,W,oFCkEzC,UAhEmB,SAAAL,GAEjB,IAAMQ,EAAUR,EAAMS,KAAKC,aAAaC,YAAYC,SAASJ,QAGvDH,EAAQL,EAAMS,KAAKC,aAAaC,YAAYC,SAASP,MAErDQ,EAAYb,EAAMS,KAAKC,aAAaC,YAAYC,SAASC,UAGzDT,EAAMQ,QAENE,EACJd,EAAMS,KAAKC,aAAaC,YAAYC,SAASE,aAC7Cd,EAAMS,KAAKC,aAAaC,YAAYC,SAASE,YAAYC,YAC3D,OACE,gBAAC,IAAD,KAEE,gBAAC,KAAD,CAAOV,MAAOA,EAAOC,YAAaE,IAClC,gBAAC,KAAD,CAASH,MAAOA,EAAOC,YAAaE,EAASJ,IAAKA,IAClD,gBAAC,KAAD,CAAUC,MAAOA,EAAOC,YAAaE,EAASJ,IAAKA,IAEnD,wBAAMY,UAAU,2BAA2BC,KAAK,QAC9C,2BAASD,UAAU,mBACjB,uBAAKA,UAAU,yBACb,wBAAMA,UAAU,yBACd,uBAAKA,UAAU,gCACb,uBAAKA,UAAU,sBACb,uBAAKE,IAAI,GAAGC,IAAKL,KAEnB,uBAAKE,UAAU,qBACb,sBAAIA,UAAU,sBAAsBX,GACpC,uBAAKe,wBAAyB,CAACC,OAAQR","file":"component---src-templates-author-page-js-9d52091923f8dcac2b9e.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst Facebook = props => (\n  <Helmet>\n    {/* Open Graph / Facebook */}\n    <meta property=\"og:type\" content=\"website\" />\n    <meta property=\"og:url\" content={props.url} />\n    <meta property=\"og:title\" content={props.title} />\n    <meta property=\"og:description\" content={props.description} />\n    <meta\n      property=\"og:image\"\n      content=\"http://livingdocs-assets.s3.amazonaws.com/ld_logo_final@2x.png\"\n    />\n  </Helmet>\n)\n\nexport default Facebook\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst Twitter = props => (\n  <Helmet>\n    <meta property=\"twitter:card\" content=\"summary_large_image\" />\n    <meta property=\"twitter:url\" content={props.url} />\n    <meta property=\"twitter:title\" content={props.title} />\n    <meta property=\"twitter:description\" content={props.description} />\n    <meta\n      property=\"twitter:image\"\n      content=\"http://livingdocs-assets.s3.amazonaws.com/ld_logo_final@2x.png\"\n    />\n  </Helmet>\n)\n\nexport default Twitter\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst Basic = props => (\n  <Helmet title={props.title}>\n    <meta name=\"description\" content={props.description} />\n    <meta name=\"keywords\" content={props.title} />\n  </Helmet>\n)\n\nexport default Basic\n","import React from 'react'\nimport {graphql} from 'gatsby'\nimport Layout from '../components/layout'\nimport {Twitter, Facebook, Basic} from '../components/SEO'\nimport {metadata} from '../../config'\n\n// The pages created in gatsby-node.js will use this component(\"template\" by gatsby convention)\n// The data is recieved by the graphQL query from the bottom of this component\nconst AuthorPage = props => {\n  // SEO - description (Page, twitter, facebook)\n  const profile = props.data.publications.publication.metadata.profile\n\n  // SEO - title (Page, twitter, facebook)\n  const title = props.data.publications.publication.metadata.title\n\n  const biography = props.data.publications.publication.metadata.biography\n\n  // SEO - url (Page, twitter, facebook)\n  const url = metadata.url\n\n  const authorImage =\n    props.data.publications.publication.metadata.authorImage &&\n    props.data.publications.publication.metadata.authorImage.originalUrl\n  return (\n    <Layout>\n      {/* SEO data for the html <head></head> */}\n      <Basic title={title} description={profile} />\n      <Twitter title={title} description={profile} url={url} />\n      <Facebook title={title} description={profile} url={url} />\n\n      <main className=\"wrapper wrapper--article\" role=\"main\">\n        <article className=\"article-content\">\n          <div className=\"article-content__body\">\n            <main className=\"article-content__main\">\n              <div className=\"author-card author-card--big\">\n                <div className=\"author-card__image\">\n                  <img alt=\"\" src={authorImage} />\n                </div>\n                <div className=\"author-card__body\">\n                  <h2 className=\"author-card__title\">{title}</h2>\n                  <div dangerouslySetInnerHTML={{__html: biography}} />\n                </div>\n              </div>\n            </main>\n          </div>\n        </article>\n      </main>\n    </Layout>\n  )\n}\n\n// in gatsby-node.js we gave a context \"slug\"\n// we can use that to filter the matching publication and slug now\nexport const query = graphql`\n  query($slug: String!) {\n    publications(extra: {slug: {eq: $slug}}) {\n      publication {\n        metadata {\n          authorImage {\n            originalUrl\n          }\n          title\n          profile\n          biography\n        }\n      }\n      extra {\n        slug\n      }\n    }\n  }\n`\nexport default AuthorPage\n"],"sourceRoot":""}